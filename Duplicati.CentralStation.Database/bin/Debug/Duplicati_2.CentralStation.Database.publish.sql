/*
Deployment script for CentralStation

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "CentralStation"
:setvar DefaultFilePrefix "CentralStation"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_BackupReport_ToInstance]...';


GO
ALTER TABLE [dbo].[BackupReport] DROP CONSTRAINT [FK_BackupReport_ToInstance];


GO
PRINT N'Starting rebuilding table [dbo].[BackupReport]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_BackupReport] (
    [Id]                  INT            IDENTITY (1, 1) NOT NULL,
    [Success]             BIT            NOT NULL,
    [Message]             NVARCHAR (MAX) NOT NULL,
    [InstanceId]          INT            NOT NULL,
    [BeginDate]           DATETIME2 (7)  NOT NULL,
    [EndDate]             DATETIME2 (7)  NOT NULL,
    [AddedFiles]          INT            NOT NULL,
    [SizeOfAddedFiles]    INT            NOT NULL,
    [ExaminedFiles]       INT            NOT NULL,
    [SizeOfExaminedFiles] INT            NOT NULL,
    [NotProcessedFiles]   INT            NOT NULL,
    [Duration]            TIME (7)       NOT NULL,
    [DeletedFiles]        INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[BackupReport])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BackupReport] ON;
        INSERT INTO [dbo].[tmp_ms_xx_BackupReport] ([Id], [Success], [Message], [InstanceId], [BeginDate], [EndDate], [AddedFiles], [SizeOfAddedFiles], [ExaminedFiles], [SizeOfExaminedFiles], [NotProcessedFiles], [Duration], [DeletedFiles])
        SELECT   [Id],
                 [Success],
                 [Message],
                 [InstanceId],
                 [BeginDate],
                 [EndDate],
                 [AddedFiles],
                 [SizeOfAddedFiles],
                 [ExaminedFiles],
                 [SizeOfExaminedFiles],
                 [NotProcessedFiles],
                 [Duration],
                 [DeletedFiles]
        FROM     [dbo].[BackupReport]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BackupReport] OFF;
    END

DROP TABLE [dbo].[BackupReport];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_BackupReport]', N'BackupReport';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_BackupReport_ToInstance]...';


GO
ALTER TABLE [dbo].[BackupReport] WITH NOCHECK
    ADD CONSTRAINT [FK_BackupReport_ToInstance] FOREIGN KEY ([InstanceId]) REFERENCES [dbo].[Instance] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[BackupReport] WITH CHECK CHECK CONSTRAINT [FK_BackupReport_ToInstance];


GO
PRINT N'Update complete.';


GO
